
upstream consul {
  server 0.0.0.1;

  balancer_by_lua_block {
    local balancer = require "ngx.balancer"
    if not ngx.ctx.tries then
      ngx.ctx.tries = 0
    end
    if ngx.ctx.tries < 100 then
      balancer.set_more_tries(1)
    end
    ngx.ctx.tries = ngx.ctx.tries + 1
    local consul_balancer = require "balancer"
    local peer = consul_balancer.next(ngx.ctx.service)
    if peer == nil then
      ngx.log(ngx.ERR, "no peer found for service: ", ngx.ctx.service)
      return ngx.exit(500)
    end
    local ok, err = balancer.set_current_peer(peer["address"], peer["port"])
    if not ok then
      ngx.log(ngx.ERR, "failed to set the current peer: ", err)
      return ngx.exit(500)
    end
  }

  keepalive 12;
}

server {
  listen 81 default_server;
  listen [::]:81 default_server;
  server_name _;

  location / {
    index  index.html;
  }

  location /django {
    access_by_lua_block {
      ngx.ctx.service = "django";
    }
    proxy_pass http://consul/;
  }
}
